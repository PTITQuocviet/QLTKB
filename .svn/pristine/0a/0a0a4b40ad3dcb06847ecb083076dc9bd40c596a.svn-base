import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { DashboardComponent } from './dashboard/dashboard.component';
import { DatasetComponent } from './dataset/dataset.component';
import { DeployComponent } from './deploy/deploy.component';
import { ErrorPageComponent } from './error-page/error-page.component';
import { EvaluationComponent } from './evaluation/evaluation.component';
import { FeatureSetResultComponent } from './feature-set-result/feature-set-result.component';
import { FeatureSetComponent } from './feature-set/feature-set.component';
import { ItemRuleComponent } from './item-rule/item-rule.component';
import { LoginComponent } from './login/login.component';
import { ModelComponent } from './model/model.component';
import { OverviewComponent } from './overview/overview.component';
import { ProjectComponent } from './project/project.component';
import { RawDataComponent } from './raw-data/raw-data.component';
import { RoleComponent } from './role/role.component';
import { SettingComponent } from './setting/setting.component';
import { LoginGuard } from './shared/login-guard.service';
import { UserComponent } from './user/user.component';

const routes: Routes = [
  { path: '', redirectTo: '/project', pathMatch: 'full' },
  {
    path: 'dashboard'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: DashboardComponent
    // , resolve: [MetaSearchResolverService]//đảm bảo có đủ meta trước khi search
  },
  {
    path: 'project'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: ProjectComponent
    // , resolve: [MetaSearchResolverService]//đảm bảo có đủ meta trước khi search
  },
  {
    path: 'role'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: RoleComponent
    // , resolve: [MetaSearchResolverService]//đảm bảo có đủ meta trước khi search
  },
  {
    path: 'user'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: UserComponent
    // , resolve: [MetaSearchResolverService]//đảm bảo có đủ meta trước khi search
  },
  {
    path: 'setting'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: SettingComponent
    // , resolve: [MetaSearchResolverService]//đảm bảo có đủ meta trước khi search
  },
  {
    path: 'project/:idProject/dataset'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: DatasetComponent
  },
  {
    path: 'project/:idProject/overview'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: OverviewComponent
  },
  {
    path: 'project/:idProject/item-rule'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: ItemRuleComponent
  },
  {
    path: 'project/:idProject/rawData'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: RawDataComponent
  },
  {
    path: 'project/:idProject/feature-set'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: FeatureSetComponent
  },
  {
    path: 'project/:idProject/feature-set/:idFeatureSet'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: FeatureSetResultComponent
  },
  {
    path: 'project/:idProject/model'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: ModelComponent
  },
  {
    path: 'project/:idProject/evaluation'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: EvaluationComponent
  },
  {
    path: 'project/:idProject/deploy'
    , canActivate: [LoginGuard]//nếu chưa đăng nhập thì chuyển hướng đến login
    , component: DeployComponent
  },
  { path: 'login', component: LoginComponent },
  {
    path: 'not-found'
    , component: ErrorPageComponent
    , data: { message: 'Page not found!' }
  },
  { path: '**', redirectTo: '/not-found' }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }
