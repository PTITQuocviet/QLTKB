import { HttpClient } from "@angular/common/http";
import { Injectable } from "@angular/core";
import { Observable } from "rxjs";
import { environment } from "src/environments/environment";
import { FeatureSetSearchParamModel } from "../feature-set/feature-set-search-param.model";
import { FeatureSetService } from "../feature-set/feature-set.service";
import { PaggingModel } from "../shared/model/pagging.model";
import { ResultPagging } from "../shared/model/result-pagging.model";

@Injectable({ providedIn: 'root' })
export class FeatureSetResultService {

    baseURL: string;//base url của service này

    constructor(
        private http: HttpClient,
        private featureSetService: FeatureSetService
    ) {
        this.baseURL = environment.baseURL + environment.apiFeatureSetResult;
    }

    /** tạo request tìm kiếm không phân trang  */
    requestSearch(pagging: PaggingModel, searchParam: FeatureSetSearchParamModel): Observable<ResultPagging> {
        this.featureSetService.requestSearch(pagging, searchParam);
        const url = new URL(
            this.baseURL.replace(':prj_id', searchParam.projectId) + '/' + searchParam.featureSetId
        );
        
        for (const [key, value] of Object.entries(searchParam)) {
            if (value
                && value.length > 0
                && key !== 'projectId'//tham số này đã được cho vào path param
                && key !== 'featureSetId'//tham số này đã được cho vào path param
            ) {
                url.searchParams.set(key, value);
            }
        }

        //TODO set các tham số tìm kiếm

        url.searchParams.set('start', '0');
        url.searchParams.set('rows', '1');

        return this.http.get<ResultPagging>(url.href);
    }
    
}