import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';
import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';
import { ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-delete',
  templateUrl: './delete.component.html',
  styleUrls: ['./delete.component.css']
})

export class DeleteComponent implements OnInit {

  closeModalResult = '';

  @ViewChild('wrapper', { static: true }) wrapper: ElementRef;
  @ViewChild('formCreate', { static: true }) formCreate: ElementRef;
  @ViewChild('modalDelete', { static: true }) modalDelete: ElementRef;
  @ViewChild('modalEditProject', { static: true }) modalEditProject: ElementRef;

  @Input('title') title: string;
  @Input('message') message: string;

  @Output() btnCode = new EventEmitter<{ btnCode: number }>();//code list, 1: yes, 2: no, 3: close

  constructor(
    private modalService: NgbModal,
  ) {

  }

  ngOnInit() { }

  openModal() {
    this.modalService.open(this.modalDelete, {})
      .result
      .then(
        (result) => {//Closed
          // console.log(result);
          if (result === 'yes') {
            // console.log(this.formCreate);
            this.btnCode.emit({btnCode: 1});
          } else if (result === 'no') {
            this.btnCode.emit({btnCode: 2});
          }
        }, (reason) => {//Dismissed
          // this.closeModalResult = `Dismissed ${this.getDismissModalReason(reason)}`;
          // console.log(this.closeModalResult);
          this.btnCode.emit({btnCode: 3});
        });
  }

  private getDismissModalReason(reason: any): string {
    if (reason === ModalDismissReasons.ESC) {
      return 'by pressing ESC';
    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {
      return 'by clicking on a backdrop';
    } else {
      return `with: ${reason}`;
    }
  }
}